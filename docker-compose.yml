version: "3.8"

services:
  api:
    container_name: api
    restart: always
    build:
      context: ./api
      target: development
    volumes:
      - ./api:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 4000:4000
    command: npm run start:dev
    env_file:
      - api/.env
    networks:
      - webnet
    depends_on:
      - postgres

  postgres:
    container_name: postgres
    image: postgres:latest
    restart: always
    networks:
      - webnet
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db:/var/lib/postgresql/data
    env_file:
      - ./.env
    ports:
      - 5432:5432

  adminer:
    image: adminer
    restart: always
    networks:
      - webnet
    ports:
      - 8080:8080

  client:
    container_name: client
    restart: always
    build:
      context: ./client
      target: development
    volumes:
      - ./client:/app
      - /app/node_modules
    ports:
      - 3000:3000
    networks:
      - webnet

networks:
  webnet:

volumes:
  db:
    driver: local
  pgadmin:
    driver: local
